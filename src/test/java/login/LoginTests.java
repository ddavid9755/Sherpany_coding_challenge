package login;

import base.BaseConfig;
import helper.*;
import org.testng.annotations.Test;
import static org.testng.Assert.assertEquals;

public class LoginTests extends BaseConfig {
    private int expectedBrokenImagesAndLinks = 0;


    @Test
    public void checkBrokenLinks() {
        int actualBrokenLinksCount = loginPage.checkLinks();
        assertEquals(actualBrokenLinksCount, expectedBrokenImagesAndLinks);
    }

    @Test
    public void checkBrokenImages() {
        int actualBrokenImagesCount = loginPage.checkImages();
        assertEquals(actualBrokenImagesCount, expectedBrokenImagesAndLinks);
    }

    @Test
    public void validatePageElements() {
        loginPage.checkElementState(loginPage.getEmailInput());
        loginPage.checkElementState(loginPage.getPasswordInput());
        loginPage.checkElementState(loginPage.getLoginButton());
        loginPage.checkElementState(loginPage.getLanguageDropdown());
        loginPage.checkElementState(loginPage.getForgotPasswordButton());
        loginPage.checkElementState(loginPage.getGetHelpButton());
        loginPage.checkElementState(loginPage.getRequestDemoLink());
        loginPage.checkElementState(loginPage.getLoginButton());
        loginPage.checkElementState(loginPage.getSecondaryLoginButton());
        loginPage.checkElementState(loginPage.getSherpanyHomeLink());
        loginPage.checkElementState(loginPage.getMeetingResourcesLink());
        loginPage.checkElementState(loginPage.getPrivacyPolicyLink());
        loginPage.checkElementState(loginPage.getTermsOfUseLink());
        loginPage.checkElementState(loginPage.getDownloadIosLink());
        loginPage.checkElementState(loginPage.getDownloadAppStoreLink());
        loginPage.checkElementState(loginPage.getDownloadWindowsLink());
        loginPage.clickElement(loginPage.getLoginButton());
        loginPage.checkElementState(loginPage.getErrorMessage());
        loginPage.clickElement(loginPage.getForgotPasswordButton());
        loginPage.checkElementState(loginPage.getEmailInput());
        loginPage.checkElementState(loginPage.getLoginButton());
        loginPage.checkElementState(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        loginPage.checkElementState(loginPage.getEmailInput());
        loginPage.checkElementState(loginPage.getLoginButton());
        loginPage.checkElementState(loginPage.getSecondaryLoginButton());
    }
    @Test
    public void checkEnglishTexts(){
        String actualTitle = driver.getTitle();
        String expectedTitle = LanguageEnums.EnglishText.TITLE.name;
        assertEquals(actualTitle, expectedTitle);
        String actualEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedEmailLabel = LanguageEnums.EnglishText.EMAIL.name;
        assertEquals(actualEmailLabel, expectedEmailLabel);
        String actualPasswordLabel = loginPage.checkElementLabel(loginPage.getPasswordLabel());
        String expectedPasswordLabel = LanguageEnums.EnglishText.PASSWORD.name;
        assertEquals(actualPasswordLabel, expectedPasswordLabel);
        String actualForgotPasswordLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordButton());
        String expectedForgotPasswordLabel = LanguageEnums.EnglishText.FORGOTPASSWORD.name;
        assertEquals(actualForgotPasswordLabel, expectedForgotPasswordLabel);
        String actualLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedLogInButtonLabel = LanguageEnums.EnglishText.LOGIN.name;
        assertEquals(actualLogInButtonLabel, expectedLogInButtonLabel);
        String actualSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSeparatorLabel = LanguageEnums.EnglishText.OR.name;
        assertEquals(actualSeparatorLabel, expectedSeparatorLabel);
        String actualSecondaryLogInButtonLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedSecondaryLogInButtonLabel = LanguageEnums.EnglishText.LOGINWITHSSO.name;
        assertEquals(actualSecondaryLogInButtonLabel, expectedSecondaryLogInButtonLabel);
        String actualRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedRequestDemoLabel = LanguageEnums.EnglishText.NOACCOUNTYET.name;
        assertEquals(actualRequestDemoLabel, expectedRequestDemoLabel);
        String actualRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedRequestDemoButtonLabel = LanguageEnums.EnglishText.REQUESTDEMO.name;
        assertEquals(actualRequestDemoButtonLabel, expectedRequestDemoButtonLabel);
        String actualGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedGetHelpButtonLabel = LanguageEnums.EnglishText.GETHELP.name;
        assertEquals(actualGetHelpButtonLabel, expectedGetHelpButtonLabel);
        String actualHomeLinkLabel = loginPage.checkElementLabel(loginPage.getSherpanyHomeLink());
        String expectedHomeLinkLabel = LanguageEnums.EnglishText.HOMEPAGE.name;
        assertEquals(actualHomeLinkLabel, expectedHomeLinkLabel);
        String actualMeetingSourcesLabel = loginPage.checkElementLabel(loginPage.getMeetingResourcesLink());
        String expectedMeetingSourceLabel = LanguageEnums.EnglishText.MEETINGRESOURCES.name;
        assertEquals(actualMeetingSourcesLabel, expectedMeetingSourceLabel);
        String actualPrivacyPolicyLabel = loginPage.checkElementLabel(loginPage.getPrivacyPolicyLink());
        String expectedPrivacyPolicyLabel = LanguageEnums.EnglishText.PRIVACYPOLICY.name;
        assertEquals(actualPrivacyPolicyLabel, expectedPrivacyPolicyLabel);
        String actualTermsOfUseLabel = loginPage.checkElementLabel(loginPage.getTermsOfUseLink());
        String expectedTermsOfUseLabel = LanguageEnums.EnglishText.TERMSOFUSE.name;
        assertEquals(actualTermsOfUseLabel, expectedTermsOfUseLabel);
        String actualDownloadLabel = loginPage.checkElementLabel(loginPage.getDownloadOn());
        String expectedDownloadLabel = LanguageEnums.EnglishText.DOWNLOADON.name;
        assertEquals(actualDownloadLabel, expectedDownloadLabel);
        loginPage.clickElement(loginPage.getForgotPasswordButton());
        String actualForgotPasswordInputLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordInputLabel());
        String expectedForgotPasswordInputLabel = LanguageEnums.EnglishText.WELLRESENDLINK.name;
        assertEquals(actualForgotPasswordInputLabel, expectedForgotPasswordInputLabel);
        String actualNewSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedNewSeparatorLabel = LanguageEnums.EnglishText.OR.name;
        assertEquals(actualNewSeparatorLabel, expectedNewSeparatorLabel);
        String actualNewLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedNewLogInButtonLabel = LanguageEnums.EnglishText.SENDLINK.name;
        assertEquals(actualNewLogInButtonLabel, expectedNewLogInButtonLabel);
        String actualNewRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedNewRequestDemoLabel = LanguageEnums.EnglishText.NOACCOUNTYET.name;
        assertEquals(actualNewRequestDemoLabel, expectedNewRequestDemoLabel);
        String actualNewRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedNewRequestDemoButtonLabel = LanguageEnums.EnglishText.REQUESTDEMO.name;
        assertEquals(actualNewRequestDemoButtonLabel, expectedNewRequestDemoButtonLabel);
        String actualNewGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedNewGetHelpButtonLabel = LanguageEnums.EnglishText.GETHELP.name;
        assertEquals(actualNewGetHelpButtonLabel, expectedNewGetHelpButtonLabel);
        String actualReturnToLoginLabel = loginPage.checkElementLabel(loginPage.getReturnToLogin());
        String expectedReturnToLoginLabel = LanguageEnums.EnglishText.RETURNTOLOGIN.name;
        assertEquals(actualReturnToLoginLabel, expectedReturnToLoginLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualForgotPasswordError = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedForgotPasswordError = LanguageEnums.EnglishText.MISSINGEMAILERROR.name;
        assertEquals(actualForgotPasswordError, expectedForgotPasswordError);
        loginPage.clickElement(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        String actualSsoEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedSsoEmailLabel = LanguageEnums.EnglishText.EMAIL.name;
        assertEquals(actualSsoEmailLabel, expectedSsoEmailLabel);
        String actualSsoLoginButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedSsoLoginButtonLabel = LanguageEnums.EnglishText.LOGINWITHSSO.name;
        assertEquals(actualSsoLoginButtonLabel, expectedSsoLoginButtonLabel);
        String actualLogInWithPasswordLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedLogInWithPasswordLabel = LanguageEnums.EnglishText.LOGINWITHPASSWORD.name;
        assertEquals(actualLogInWithPasswordLabel, expectedLogInWithPasswordLabel);
        String actualSsoSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSsoSeparatorLabel = LanguageEnums.EnglishText.OR.name;
        assertEquals(actualSsoSeparatorLabel, expectedSsoSeparatorLabel);
        String actualSsoRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedSsoRequestDemoLabel = LanguageEnums.EnglishText.NOACCOUNTYET.name;
        assertEquals(actualSsoRequestDemoLabel, expectedSsoRequestDemoLabel);
        String actualSsoRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedSsoRequestDemoButtonLabel = LanguageEnums.EnglishText.REQUESTDEMO.name;
        assertEquals(actualSsoRequestDemoButtonLabel, expectedSsoRequestDemoButtonLabel);
        String actualSsoGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedSsoGetHelpButtonLabel = LanguageEnums.EnglishText.GETHELP.name;
        assertEquals(actualSsoGetHelpButtonLabel, expectedSsoGetHelpButtonLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoEmailErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoEmailErrorMessage = LanguageEnums.EnglishText.MISSINGEMAILERROR.name;
        assertEquals(actualSsoEmailErrorMessage, expectedSsoEmailErrorMessage);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoErrorMessage = LanguageEnums.EnglishText.SSOLOGINERROR.name;
        assertEquals(actualSsoErrorMessage, expectedSsoErrorMessage);
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        loginPage.clickElement(loginPage.getLoginButton());
        String actualErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedErrorMessageLabel = LanguageEnums.EnglishText.MISSINGEMAILERROR.name;
        assertEquals(actualErrorMessageLabel, expectedErrorMessageLabel);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualNewErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedNewErrorMessageLabel = LanguageEnums.EnglishText.MISSINGPASSWORDERROR.name;
        assertEquals(actualNewErrorMessageLabel, expectedNewErrorMessageLabel);
    }

    @Test
    public void checkGermanText(){
        loginPage.selectLanguageFromDropdown("Deutsch");
        loginPage.waitForTitle();
        String actualTitle = driver.getTitle();
        String expectedTitle = LanguageEnums.GermanText.TITLE.name;
        assertEquals(actualTitle, expectedTitle);
        String actualEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedEmailLabel = LanguageEnums.GermanText.EMAIL.name;
        assertEquals(actualEmailLabel, expectedEmailLabel);
        String actualPasswordLabel = loginPage.checkElementLabel(loginPage.getPasswordLabel());
        String expectedPasswordLabel = LanguageEnums.GermanText.PASSWORD.name;
        assertEquals(actualPasswordLabel, expectedPasswordLabel);
        String actualForgotPasswordLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordButton());
        String expectedForgotPasswordLabel = LanguageEnums.GermanText.FORGOTPASSWORD.name;
        assertEquals(actualForgotPasswordLabel, expectedForgotPasswordLabel);
        String actualLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedLogInButtonLabel = LanguageEnums.GermanText.LOGIN.name;
        assertEquals(actualLogInButtonLabel, expectedLogInButtonLabel);
        String actualSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSeparatorLabel = LanguageEnums.GermanText.OR.name;
        assertEquals(actualSeparatorLabel, expectedSeparatorLabel);
        String actualSecondaryLogInButtonLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedSecondaryLogInButtonLabel = LanguageEnums.GermanText.LOGINWITHSSO.name;
        assertEquals(actualSecondaryLogInButtonLabel, expectedSecondaryLogInButtonLabel);
        String actualRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedRequestDemoLabel = LanguageEnums.GermanText.NOACCOUNTYET.name;
        assertEquals(actualRequestDemoLabel, expectedRequestDemoLabel);
        String actualRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedRequestDemoButtonLabel = LanguageEnums.GermanText.REQUESTDEMO.name;
        assertEquals(actualRequestDemoButtonLabel, expectedRequestDemoButtonLabel);
        String actualGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedGetHelpButtonLabel = LanguageEnums.GermanText.GETHELP.name;
        assertEquals(actualGetHelpButtonLabel, expectedGetHelpButtonLabel);
        String actualHomeLinkLabel = loginPage.checkElementLabel(loginPage.getSherpanyHomeLink());
        String expectedHomeLinkLabel = LanguageEnums.GermanText.HOMEPAGE.name;
        assertEquals(actualHomeLinkLabel, expectedHomeLinkLabel);
        String actualMeetingSourcesLabel = loginPage.checkElementLabel(loginPage.getMeetingResourcesLink());
        String expectedMeetingSourceLabel = LanguageEnums.GermanText.MEETINGRESOURCES.name;
        assertEquals(actualMeetingSourcesLabel, expectedMeetingSourceLabel);
        String actualPrivacyPolicyLabel = loginPage.checkElementLabel(loginPage.getPrivacyPolicyLink());
        String expectedPrivacyPolicyLabel = LanguageEnums.GermanText.PRIVACYPOLICY.name;
        assertEquals(actualPrivacyPolicyLabel, expectedPrivacyPolicyLabel);
        String actualTermsOfUseLabel = loginPage.checkElementLabel(loginPage.getTermsOfUseLink());
        String expectedTermsOfUseLabel = LanguageEnums.GermanText.TERMSOFUSE.name;
        assertEquals(actualTermsOfUseLabel, expectedTermsOfUseLabel);
        String actualDownloadLabel = loginPage.checkElementLabel(loginPage.getDownloadOn());
        String expectedDownloadLabel = LanguageEnums.GermanText.DOWNLOADON.name;
        assertEquals(actualDownloadLabel, expectedDownloadLabel);
        loginPage.clickElement(loginPage.getForgotPasswordButton());
        String actualForgotPasswordInputLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordInputLabel());
        String expectedForgotPasswordInputLabel = LanguageEnums.GermanText.WELLRESENDLINK.name;
        assertEquals(actualForgotPasswordInputLabel, expectedForgotPasswordInputLabel);
        String actualNewSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedNewSeparatorLabel = LanguageEnums.GermanText.OR.name;
        assertEquals(actualNewSeparatorLabel, expectedNewSeparatorLabel);
        String actualNewLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedNewLogInButtonLabel = LanguageEnums.GermanText.SENDLINK.name;
        assertEquals(actualNewLogInButtonLabel, expectedNewLogInButtonLabel);
        String actualNewRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedNewRequestDemoLabel = LanguageEnums.GermanText.NOACCOUNTYET.name;
        assertEquals(actualNewRequestDemoLabel, expectedNewRequestDemoLabel);
        String actualNewRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedNewRequestDemoButtonLabel = LanguageEnums.GermanText.REQUESTDEMO.name;
        assertEquals(actualNewRequestDemoButtonLabel, expectedNewRequestDemoButtonLabel);
        String actualNewGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedNewGetHelpButtonLabel = LanguageEnums.GermanText.GETHELP.name;
        assertEquals(actualNewGetHelpButtonLabel, expectedNewGetHelpButtonLabel);
        String actualReturnToLoginLabel = loginPage.checkElementLabel(loginPage.getReturnToLogin());
        String expectedReturnToLoginLabel = LanguageEnums.GermanText.RETURNTOLOGIN.name;
        assertEquals(actualReturnToLoginLabel, expectedReturnToLoginLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualForgotPasswordError = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedForgotPasswordError = LanguageEnums.GermanText.MISSINGEMAILERROR.name;
        assertEquals(actualForgotPasswordError, expectedForgotPasswordError);
        loginPage.clickElement(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        String actualSsoEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedSsoEmailLabel = LanguageEnums.GermanText.EMAIL.name;
        assertEquals(actualSsoEmailLabel, expectedSsoEmailLabel);
        String actualSsoLoginButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedSsoLoginButtonLabel = LanguageEnums.GermanText.LOGINWITHSSO.name;
        assertEquals(actualSsoLoginButtonLabel, expectedSsoLoginButtonLabel);
        String actualLogInWithPasswordLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedLogInWithPasswordLabel = LanguageEnums.GermanText.LOGINWITHPASSWORD.name;
        assertEquals(actualLogInWithPasswordLabel, expectedLogInWithPasswordLabel);
        String actualSsoSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSsoSeparatorLabel = LanguageEnums.GermanText.OR.name;
        assertEquals(actualSsoSeparatorLabel, expectedSsoSeparatorLabel);
        String actualSsoRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedSsoRequestDemoLabel = LanguageEnums.GermanText.NOACCOUNTYET.name;
        assertEquals(actualSsoRequestDemoLabel, expectedSsoRequestDemoLabel);
        String actualSsoRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedSsoRequestDemoButtonLabel = LanguageEnums.GermanText.REQUESTDEMO.name;
        assertEquals(actualSsoRequestDemoButtonLabel, expectedSsoRequestDemoButtonLabel);
        String actualSsoGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedSsoGetHelpButtonLabel = LanguageEnums.GermanText.GETHELP.name;
        assertEquals(actualSsoGetHelpButtonLabel, expectedSsoGetHelpButtonLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoEmailErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoEmailErrorMessage = LanguageEnums.GermanText.MISSINGEMAILERROR.name;
        assertEquals(actualSsoEmailErrorMessage, expectedSsoEmailErrorMessage);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoErrorMessage = LanguageEnums.GermanText.SSOLOGINERROR.name;
        assertEquals(actualSsoErrorMessage, expectedSsoErrorMessage);
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        loginPage.clickElement(loginPage.getLoginButton());
        String actualErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedErrorMessageLabel = LanguageEnums.GermanText.MISSINGEMAILERROR.name;
        assertEquals(actualErrorMessageLabel, expectedErrorMessageLabel);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualNewErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedNewErrorMessageLabel = LanguageEnums.GermanText.MISSINGPASSWORDERROR.name;
        assertEquals(actualNewErrorMessageLabel, expectedNewErrorMessageLabel);
    }

    @Test
    public void checkItalianText() {
        loginPage.selectLanguageFromDropdown("Italiano");
        loginPage.waitForTitle();
        String actualTitle = driver.getTitle();
        String expectedTitle = LanguageEnums.ItalianText.TITLE.name;
        assertEquals(actualTitle, expectedTitle);
        String actualEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedEmailLabel = LanguageEnums.ItalianText.EMAIL.name;
        assertEquals(actualEmailLabel, expectedEmailLabel);
        String actualPasswordLabel = loginPage.checkElementLabel(loginPage.getPasswordLabel());
        String expectedPasswordLabel = LanguageEnums.ItalianText.PASSWORD.name;
        assertEquals(actualPasswordLabel, expectedPasswordLabel);
        String actualForgotPasswordLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordButton());
        String expectedForgotPasswordLabel = LanguageEnums.ItalianText.FORGOTPASSWORD.name;
        assertEquals(actualForgotPasswordLabel, expectedForgotPasswordLabel);
        String actualLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedLogInButtonLabel = LanguageEnums.ItalianText.LOGIN.name;
        assertEquals(actualLogInButtonLabel, expectedLogInButtonLabel);
        String actualSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSeparatorLabel = LanguageEnums.ItalianText.OR.name;
        assertEquals(actualSeparatorLabel, expectedSeparatorLabel);
        String actualSecondaryLogInButtonLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedSecondaryLogInButtonLabel = LanguageEnums.ItalianText.LOGINWITHSSO.name;
        assertEquals(actualSecondaryLogInButtonLabel, expectedSecondaryLogInButtonLabel);
        String actualRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedRequestDemoLabel = LanguageEnums.ItalianText.NOACCOUNTYET.name;
        assertEquals(actualRequestDemoLabel, expectedRequestDemoLabel);
        String actualRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedRequestDemoButtonLabel = LanguageEnums.ItalianText.REQUESTDEMO.name;
        assertEquals(actualRequestDemoButtonLabel, expectedRequestDemoButtonLabel);
        String actualGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedGetHelpButtonLabel = LanguageEnums.ItalianText.GETHELP.name;
        assertEquals(actualGetHelpButtonLabel, expectedGetHelpButtonLabel);
        String actualHomeLinkLabel = loginPage.checkElementLabel(loginPage.getSherpanyHomeLink());
        String expectedHomeLinkLabel = LanguageEnums.ItalianText.HOMEPAGE.name;
        assertEquals(actualHomeLinkLabel, expectedHomeLinkLabel);
        String actualMeetingSourcesLabel = loginPage.checkElementLabel(loginPage.getMeetingResourcesLink());
        String expectedMeetingSourceLabel = LanguageEnums.ItalianText.MEETINGRESOURCES.name;
        assertEquals(actualMeetingSourcesLabel, expectedMeetingSourceLabel);
        String actualPrivacyPolicyLabel = loginPage.checkElementLabel(loginPage.getPrivacyPolicyLink());
        String expectedPrivacyPolicyLabel = LanguageEnums.ItalianText.PRIVACYPOLICY.name;
        assertEquals(actualPrivacyPolicyLabel, expectedPrivacyPolicyLabel);
        String actualTermsOfUseLabel = loginPage.checkElementLabel(loginPage.getTermsOfUseLink());
        String expectedTermsOfUseLabel = LanguageEnums.ItalianText.TERMSOFUSE.name;
        assertEquals(actualTermsOfUseLabel, expectedTermsOfUseLabel);
        String actualDownloadLabel = loginPage.checkElementLabel(loginPage.getDownloadOn());
        String expectedDownloadLabel = LanguageEnums.ItalianText.DOWNLOADON.name;
        assertEquals(actualDownloadLabel, expectedDownloadLabel);
        loginPage.clickElement(loginPage.getForgotPasswordButton());
        String actualForgotPasswordInputLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordInputLabel());
        String expectedForgotPasswordInputLabel = LanguageEnums.ItalianText.WELLRESENDLINK.name;
        assertEquals(actualForgotPasswordInputLabel, expectedForgotPasswordInputLabel);
        String actualNewSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedNewSeparatorLabel = LanguageEnums.ItalianText.OR.name;
        assertEquals(actualNewSeparatorLabel, expectedNewSeparatorLabel);
        String actualNewLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedNewLogInButtonLabel = LanguageEnums.ItalianText.SENDLINK.name;
        assertEquals(actualNewLogInButtonLabel, expectedNewLogInButtonLabel);
        String actualNewRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedNewRequestDemoLabel = LanguageEnums.ItalianText.NOACCOUNTYET.name;
        assertEquals(actualNewRequestDemoLabel, expectedNewRequestDemoLabel);
        String actualNewRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedNewRequestDemoButtonLabel = LanguageEnums.ItalianText.REQUESTDEMO.name;
        assertEquals(actualNewRequestDemoButtonLabel, expectedNewRequestDemoButtonLabel);
        String actualNewGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedNewGetHelpButtonLabel = LanguageEnums.ItalianText.GETHELP.name;
        assertEquals(actualNewGetHelpButtonLabel, expectedNewGetHelpButtonLabel);
        String actualReturnToLoginLabel = loginPage.checkElementLabel(loginPage.getReturnToLogin());
        String expectedReturnToLoginLabel = LanguageEnums.ItalianText.RETURNTOLOGIN.name;
        assertEquals(actualReturnToLoginLabel, expectedReturnToLoginLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualForgotPasswordError = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedForgotPasswordError = LanguageEnums.ItalianText.MISSINGEMAILERROR.name;
        assertEquals(actualForgotPasswordError, expectedForgotPasswordError);
        loginPage.clickElement(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        String actualSsoEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedSsoEmailLabel = LanguageEnums.ItalianText.EMAIL.name;
        assertEquals(actualSsoEmailLabel, expectedSsoEmailLabel);
        String actualSsoLoginButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedSsoLoginButtonLabel = LanguageEnums.ItalianText.LOGINWITHSSO.name;
        assertEquals(actualSsoLoginButtonLabel, expectedSsoLoginButtonLabel);
        String actualLogInWithPasswordLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedLogInWithPasswordLabel = LanguageEnums.ItalianText.LOGINWITHPASSWORD.name;
        assertEquals(actualLogInWithPasswordLabel, expectedLogInWithPasswordLabel);
        String actualSsoSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSsoSeparatorLabel = LanguageEnums.ItalianText.OR.name;
        assertEquals(actualSsoSeparatorLabel, expectedSsoSeparatorLabel);
        String actualSsoRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedSsoRequestDemoLabel = LanguageEnums.ItalianText.NOACCOUNTYET.name;
        assertEquals(actualSsoRequestDemoLabel, expectedSsoRequestDemoLabel);
        String actualSsoRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedSsoRequestDemoButtonLabel = LanguageEnums.ItalianText.REQUESTDEMO.name;
        assertEquals(actualSsoRequestDemoButtonLabel, expectedSsoRequestDemoButtonLabel);
        String actualSsoGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedSsoGetHelpButtonLabel = LanguageEnums.ItalianText.GETHELP.name;
        assertEquals(actualSsoGetHelpButtonLabel, expectedSsoGetHelpButtonLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoEmailErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoEmailErrorMessage = LanguageEnums.ItalianText.MISSINGEMAILERROR.name;
        assertEquals(actualSsoEmailErrorMessage, expectedSsoEmailErrorMessage);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoErrorMessage = LanguageEnums.ItalianText.SSOLOGINERROR.name;
        assertEquals(actualSsoErrorMessage, expectedSsoErrorMessage);
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        loginPage.clickElement(loginPage.getLoginButton());
        String actualErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedErrorMessageLabel = LanguageEnums.ItalianText.MISSINGEMAILERROR.name;
        assertEquals(actualErrorMessageLabel, expectedErrorMessageLabel);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualNewErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedNewErrorMessageLabel = LanguageEnums.ItalianText.MISSINGPASSWORDERROR.name;
        assertEquals(actualNewErrorMessageLabel, expectedNewErrorMessageLabel);
    }

   @Test
    public void checkFrenchText() {
        loginPage.selectLanguageFromDropdown("Français");
       loginPage.waitForTitle();
        String actualTitle = driver.getTitle();
        String expectedTitle = LanguageEnums.FrenchText.TITLE.name;
        assertEquals(actualTitle, expectedTitle);
        String actualEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedEmailLabel = LanguageEnums.FrenchText.EMAIL.name;
        assertEquals(actualEmailLabel, expectedEmailLabel);
        String actualPasswordLabel = loginPage.checkElementLabel(loginPage.getPasswordLabel());
        String expectedPasswordLabel = LanguageEnums.FrenchText.PASSWORD.name;
        assertEquals(actualPasswordLabel, expectedPasswordLabel);
        String actualForgotPasswordLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordButton());
        String expectedForgotPasswordLabel = LanguageEnums.FrenchText.FORGOTPASSWORD.name;
        assertEquals(actualForgotPasswordLabel, expectedForgotPasswordLabel);
        String actualLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedLogInButtonLabel = LanguageEnums.FrenchText.LOGIN.name;
        assertEquals(actualLogInButtonLabel, expectedLogInButtonLabel);
        String actualSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSeparatorLabel = LanguageEnums.FrenchText.OR.name;
        assertEquals(actualSeparatorLabel, expectedSeparatorLabel);
        String actualSecondaryLogInButtonLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedSecondaryLogInButtonLabel = LanguageEnums.FrenchText.LOGINWITHSSO.name;
        assertEquals(actualSecondaryLogInButtonLabel, expectedSecondaryLogInButtonLabel);
        String actualRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedRequestDemoLabel = LanguageEnums.FrenchText.NOACCOUNTYET.name;
        assertEquals(actualRequestDemoLabel, expectedRequestDemoLabel);
        String actualRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedRequestDemoButtonLabel = LanguageEnums.FrenchText.REQUESTDEMO.name;
        assertEquals(actualRequestDemoButtonLabel, expectedRequestDemoButtonLabel);
        String actualGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedGetHelpButtonLabel = LanguageEnums.FrenchText.GETHELP.name;
        assertEquals(actualGetHelpButtonLabel, expectedGetHelpButtonLabel);
        String actualHomeLinkLabel = loginPage.checkElementLabel(loginPage.getSherpanyHomeLink());
        String expectedHomeLinkLabel = LanguageEnums.FrenchText.HOMEPAGE.name;
        assertEquals(actualHomeLinkLabel, expectedHomeLinkLabel);
        String actualMeetingSourcesLabel = loginPage.checkElementLabel(loginPage.getMeetingResourcesLink());
        String expectedMeetingSourceLabel = LanguageEnums.FrenchText.MEETINGRESOURCES.name;
        assertEquals(actualMeetingSourcesLabel, expectedMeetingSourceLabel);
        String actualPrivacyPolicyLabel = loginPage.checkElementLabel(loginPage.getPrivacyPolicyLink());
        String expectedPrivacyPolicyLabel = LanguageEnums.FrenchText.PRIVACYPOLICY.name;
        assertEquals(actualPrivacyPolicyLabel, expectedPrivacyPolicyLabel);
        String actualTermsOfUseLabel = loginPage.checkElementLabel(loginPage.getTermsOfUseLink());
        String expectedTermsOfUseLabel = LanguageEnums.FrenchText.TERMSOFUSE.name;
        assertEquals(actualTermsOfUseLabel, expectedTermsOfUseLabel);
        String actualDownloadLabel = loginPage.checkElementLabel(loginPage.getDownloadOn());
        String expectedDownloadLabel = LanguageEnums.FrenchText.DOWNLOADON.name;
        assertEquals(actualDownloadLabel, expectedDownloadLabel);
        loginPage.clickElement(loginPage.getForgotPasswordButton());
        String actualForgotPasswordInputLabel = loginPage.checkElementLabel(loginPage.getForgotPasswordInputLabel());
        String expectedForgotPasswordInputLabel = LanguageEnums.FrenchText.WELLRESENDLINK.name;
        assertEquals(actualForgotPasswordInputLabel, expectedForgotPasswordInputLabel);
        String actualNewSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedNewSeparatorLabel = LanguageEnums.FrenchText.OR.name;
        assertEquals(actualNewSeparatorLabel, expectedNewSeparatorLabel);
        String actualNewLogInButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedNewLogInButtonLabel = LanguageEnums.FrenchText.SENDLINK.name;
        assertEquals(actualNewLogInButtonLabel, expectedNewLogInButtonLabel);
        String actualNewRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedNewRequestDemoLabel = LanguageEnums.FrenchText.NOACCOUNTYET.name;
        assertEquals(actualNewRequestDemoLabel, expectedNewRequestDemoLabel);
        String actualNewRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedNewRequestDemoButtonLabel = LanguageEnums.FrenchText.REQUESTDEMO.name;
        assertEquals(actualNewRequestDemoButtonLabel, expectedNewRequestDemoButtonLabel);
        String actualNewGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedNewGetHelpButtonLabel = LanguageEnums.FrenchText.GETHELP.name;
        assertEquals(actualNewGetHelpButtonLabel, expectedNewGetHelpButtonLabel);
        String actualReturnToLoginLabel = loginPage.checkElementLabel(loginPage.getReturnToLogin());
        String expectedReturnToLoginLabel = LanguageEnums.FrenchText.RETURNTOLOGIN.name;
        assertEquals(actualReturnToLoginLabel, expectedReturnToLoginLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualForgotPasswordError = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedForgotPasswordError = LanguageEnums.FrenchText.MISSINGEMAILERROR.name;
        assertEquals(actualForgotPasswordError, expectedForgotPasswordError);
        loginPage.clickElement(loginPage.getReturnToLogin());
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        String actualSsoEmailLabel = loginPage.checkElementLabel(loginPage.getEmailLabel());
        String expectedSsoEmailLabel = LanguageEnums.FrenchText.EMAIL.name;
        assertEquals(actualSsoEmailLabel, expectedSsoEmailLabel);
        String actualSsoLoginButtonLabel = loginPage.checkElementLabel(loginPage.getLoginButton());
        String expectedSsoLoginButtonLabel = LanguageEnums.FrenchText.LOGINWITHSSO.name;
        assertEquals(actualSsoLoginButtonLabel, expectedSsoLoginButtonLabel);
        String actualLogInWithPasswordLabel = loginPage.checkElementLabel(loginPage.getSecondaryLoginButton());
        String expectedLogInWithPasswordLabel = LanguageEnums.FrenchText.LOGINWITHPASSWORD.name;
        assertEquals(actualLogInWithPasswordLabel, expectedLogInWithPasswordLabel);
        String actualSsoSeparatorLabel = loginPage.checkElementLabel(loginPage.getSeparatorLabel());
        String expectedSsoSeparatorLabel = LanguageEnums.FrenchText.OR.name;
        assertEquals(actualSsoSeparatorLabel, expectedSsoSeparatorLabel);
        String actualSsoRequestDemoLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLabel());
        String expectedSsoRequestDemoLabel = LanguageEnums.FrenchText.NOACCOUNTYET.name;
        assertEquals(actualSsoRequestDemoLabel, expectedSsoRequestDemoLabel);
        String actualSsoRequestDemoButtonLabel = loginPage.checkElementLabel(loginPage.getRequestDemoLink());
        String expectedSsoRequestDemoButtonLabel = LanguageEnums.FrenchText.REQUESTDEMO.name;
        assertEquals(actualSsoRequestDemoButtonLabel, expectedSsoRequestDemoButtonLabel);
        String actualSsoGetHelpButtonLabel = loginPage.checkElementLabel(loginPage.getGetHelpButton());
        String expectedSsoGetHelpButtonLabel = LanguageEnums.FrenchText.GETHELP.name;
        assertEquals(actualSsoGetHelpButtonLabel, expectedSsoGetHelpButtonLabel);
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoEmailErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoEmailErrorMessage = LanguageEnums.FrenchText.MISSINGEMAILERROR.name;
        assertEquals(actualSsoEmailErrorMessage, expectedSsoEmailErrorMessage);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualSsoErrorMessage = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedSsoErrorMessage = LanguageEnums.FrenchText.SSOLOGINERROR.name;
        assertEquals(actualSsoErrorMessage, expectedSsoErrorMessage);
        loginPage.clickElement(loginPage.getSecondaryLoginButton());
        loginPage.clickElement(loginPage.getLoginButton());
        String actualErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedErrorMessageLabel = LanguageEnums.FrenchText.MISSINGEMAILERROR.name;
        assertEquals(actualErrorMessageLabel, expectedErrorMessageLabel);
        loginPage.setInputText(loginPage.getEmailInput(), "test@123.com");
        loginPage.clickElement(loginPage.getLoginButton());
        String actualNewErrorMessageLabel = loginPage.checkElementLabel(loginPage.getErrorMessage());
        String expectedNewErrorMessageLabel = LanguageEnums.FrenchText.MISSINGPASSWORDERROR.name;
        assertEquals(actualNewErrorMessageLabel, expectedNewErrorMessageLabel);
    }
}
